{"ast":null,"code":"import { elementChildren, elementOuterSize, elementStyle, setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  var swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  var params = swiper.params;\n  var wrapperEl = swiper.wrapperEl,\n    slidesEl = swiper.slidesEl,\n    swiperSize = swiper.size,\n    rtl = swiper.rtlTranslate,\n    wrongRTL = swiper.wrongRTL;\n  var isVirtual = swiper.virtual && params.virtual.enabled;\n  var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  var slides = elementChildren(slidesEl, \".\".concat(swiper.params.slideClass, \", swiper-slide\"));\n  var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  var snapGrid = [];\n  var slidesGrid = [];\n  var slidesSizesGrid = [];\n  var offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  var offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  var previousSnapGridLength = swiper.snapGrid.length;\n  var previousSlidesGridLength = swiper.slidesGrid.length;\n  var spaceBetween = params.spaceBetween;\n  var slidePosition = -offsetBefore;\n  var prevSlideSize = 0;\n  var index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(function (slideEl) {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  var gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  var slideSize;\n  var shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(function (key) {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (var i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    var slide = void 0;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = \"\";\n      }\n      var slideStyles = getComputedStyle(slide);\n      var currentTransform = slide.style.transform;\n      var currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        var width = getDirectionPropertyValue(slideStyles, 'width');\n        var paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        var paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        var marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        var marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        var boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          var _slide = slide,\n            clientWidth = _slide.clientWidth,\n            offsetWidth = _slide.offsetWidth;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = \"\".concat(slideSize, \"px\");\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = \"\".concat(swiper.virtualSize + params.spaceBetween, \"px\");\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = \"\".concat(swiper.virtualSize + params.spaceBetween, \"px\");\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    var newSlidesGrid = [];\n    for (var _i = 0; _i < snapGrid.length; _i += 1) {\n      var slidesGridItem = snapGrid[_i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[_i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    var size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      var groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      var groupSize = size * params.slidesPerGroup;\n      for (var _i2 = 0; _i2 < groups; _i2 += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (var _i3 = 0; _i3 < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; _i3 += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (params.spaceBetween !== 0) {\n    var key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter(function (_, slideIndex) {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(function (slideEl) {\n      slideEl.style[key] = \"\".concat(spaceBetween, \"px\");\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    var allSlidesSize = 0;\n    slidesSizesGrid.forEach(function (slideSizeValue) {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    var maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(function (snap) {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    var _allSlidesSize = 0;\n    slidesSizesGrid.forEach(function (slideSizeValue) {\n      _allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    _allSlidesSize -= params.spaceBetween;\n    if (_allSlidesSize < swiperSize) {\n      var allSlidesOffset = (swiperSize - _allSlidesSize) / 2;\n      snapGrid.forEach(function (snap, snapIndex) {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach(function (snap, snapIndex) {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides: slides,\n    snapGrid: snapGrid,\n    slidesGrid: slidesGrid,\n    slidesSizesGrid: slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', \"\".concat(-snapGrid[0], \"px\"));\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', \"\".concat(swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2, \"px\"));\n    var addToSnapGrid = -swiper.snapGrid[0];\n    var addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(function (v) {\n      return v + addToSnapGrid;\n    });\n    swiper.slidesGrid = swiper.slidesGrid.map(function (v) {\n      return v + addToSlidesGrid;\n    });\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    var backFaceHiddenClass = \"\".concat(params.containerModifierClass, \"backface-hidden\");\n    var hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}","map":{"version":3,"names":["elementChildren","elementOuterSize","elementStyle","setCSSProperty","updateSlides","swiper","getDirectionLabel","property","isHorizontal","getDirectionPropertyValue","node","label","parseFloat","getPropertyValue","params","wrapperEl","slidesEl","swiperSize","size","rtl","rtlTranslate","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","length","concat","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","call","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","index","indexOf","replace","virtualSize","forEach","slideEl","style","marginLeft","marginRight","marginBottom","marginTop","centeredSlides","cssMode","gridEnabled","grid","rows","initSlides","slideSize","shouldResetSlideSize","slidesPerView","breakpoints","Object","keys","filter","key","i","slide","updateSlide","slideStyles","getComputedStyle","currentTransform","transform","currentWebKitTransform","webkitTransform","roundLengths","width","paddingLeft","paddingRight","boxSizing","_slide","clientWidth","offsetWidth","Math","floor","swiperSlideSize","push","abs","slidesPerGroup","min","slidesPerGroupSkip","max","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","loop","groups","ceil","slidesBefore","slidesAfter","groupSize","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","map","snap","centerInsufficientSlides","allSlidesOffset","snapIndex","assign","addToSnapGrid","addToSlidesGrid","v","emit","watchOverflow","checkOverflow","watchSlidesProgress","updateSlidesOffset","backFaceHiddenClass","containerModifierClass","hasClassBackfaceClassAdded","el","classList","contains","maxBackfaceHiddenSlides","add","remove"],"sources":["C:/Users/satya/OneDrive/Desktop/Portfolio/node_modules/swiper/core/update/updateSlides.js"],"sourcesContent":["import { elementChildren, elementOuterSize, elementStyle, setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (params.spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}