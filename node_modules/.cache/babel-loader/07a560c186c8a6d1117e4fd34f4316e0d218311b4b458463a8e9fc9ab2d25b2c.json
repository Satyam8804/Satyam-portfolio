{"ast":null,"code":"import { extend } from '../../shared/utils.js';\nvar isGridEnabled = function isGridEnabled(swiper, params) {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  var swiper = this;\n  var realIndex = swiper.realIndex,\n    initialized = swiper.initialized,\n    params = swiper.params,\n    el = swiper.el;\n  var breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  var breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  var breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  var breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  var wasMultiRow = isGridEnabled(swiper, params);\n  var isMultiRow = isGridEnabled(swiper, breakpointParams);\n  var wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(\"\".concat(params.containerModifierClass, \"grid\"), \"\".concat(params.containerModifierClass, \"grid-column\"));\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(\"\".concat(params.containerModifierClass, \"grid\"));\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(\"\".concat(params.containerModifierClass, \"grid-column\"));\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(function (prop) {\n    var wasModuleEnabled = params[prop] && params[prop].enabled;\n    var isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  var directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  var isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}","map":{"version":3,"names":["extend","isGridEnabled","swiper","params","grid","rows","setBreakpoint","realIndex","initialized","el","breakpoints","Object","keys","length","breakpoint","getBreakpoint","breakpointsBase","currentBreakpoint","breakpointOnlyParams","undefined","breakpointParams","originalParams","wasMultiRow","isMultiRow","wasEnabled","enabled","classList","remove","concat","containerModifierClass","emitContainerClasses","add","fill","forEach","prop","wasModuleEnabled","isModuleEnabled","disable","enable","directionChanged","direction","needsReLoop","loop","slidesPerView","changeDirection","isEnabled","assign","allowTouchMove","allowSlideNext","allowSlidePrev","emit","loopDestroy","loopCreate","updateSlides"],"sources":["C:/Users/satya/OneDrive/Desktop/Portfolio/node_modules/swiper/core/breakpoints/setBreakpoint.js"],"sourcesContent":["import { extend } from '../../shared/utils.js';\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}